// ======================================================================== //
// Copyright 2009-2016 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

/*! \file perspectivecamera.ih \brief Defines the ISPC-side Perspective Camera class */

#include "Camera.ih"

/*! \brief A plain perspective ("PinHole") camera; no depth of field  */
struct PerspectiveCamera {
  /*! \brief The parent class info required for this camera to
    'inherit' from Camera */
  Camera super;

  vec3f org;    //!< position of camera
  vec3f dir_00; //!< direction of ray with screenSample=(0,0); scaled to focusDistance
  vec3f dir_du; //!< delta of ray direction between two pixels in X; scaled to focusDistance
  vec3f dir_dv; //!< delta of ray direction between two pixels in Y; scaled to focusDistance
  vec2f imageStart; //!< where the viewable tile begins [0..1]
  vec2f imageEnd; //!< where the viewable tile ends [0..1]
  float scaledAperture; //!< radius of aperture, divided by horizontal image plane size
  float aspect; //!< image plane size x / y
};
