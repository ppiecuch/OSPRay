// ======================================================================== //
// Copyright 2009-2016 Intel Corporation                                    //
//                                                                          //
// Licensed under the Apache License, Version 2.0 (the "License");          //
// you may not use this file except in compliance with the License.         //
// You may obtain a copy of the License at                                  //
//                                                                          //
//     http://www.apache.org/licenses/LICENSE-2.0                           //
//                                                                          //
// Unless required by applicable law or agreed to in writing, software      //
// distributed under the License is distributed on an "AS IS" BASIS,        //
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. //
// See the License for the specific language governing permissions and      //
// limitations under the License.                                           //
// ======================================================================== //

#pragma once

#include "Geometry.ih"

//! ispc-equivalent of the ospray::TriangleMesh geometry
struct TriangleMesh {
  uniform Geometry  geometry; //!< inherited geometry fields
  uniform int32     numTriangles; //!< number of triangles
  uniform int32     idxSize; //!< stride of triangle indices, in int32 elements
  uniform int32     vtxSize; //!< stride of vertex positions, in float32 elements
  uniform int32     norSize; //!< stride of normals, in float32 elements
  uniform int      *index;  //!< mesh's triangle index array
  uniform float    *vertex; //!< mesh's vertex position array
  uniform float    *normal; //!< mesh's vertex normal array
  uniform vec4f    *color;  //!< mesh's vertex color array
  uniform vec2f    *texcoord; //!< mesh's texture coordinate array
  uniform uint32   *prim_materialID;     // per-primitive material ID
  uniform Material *uniform *materialList;  // list of materials, if multiple materials are assigned to this mesh.
  uniform int32     geom_materialID;     // per-object material ID
};

